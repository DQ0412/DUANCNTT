import axios from "axios";

const BASE_URL = "http://127.0.0.1:8000/api"; 

export const login = (userData) => async (dispatch) => {
  try {
    dispatch({ type: 'USER_LOGIN_REQUEST' }); // B·∫Øt ƒë·∫ßu loading

    // G·ª≠i y√™u c·∫ßu ƒëƒÉng nh·∫≠p
    const { data } = await axios.post(`${BASE_URL}/user/login`, userData, {
      headers: {
        'Content-Type': 'application/json'
      }
    });

    // Ki·ªÉm tra d·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ API
    if (!data || !data.user || !data.token) {
      console.error("‚ùå API kh√¥ng tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá:", data);
      throw new Error("API kh√¥ng tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá!");
    }

    // Log token ƒë·ªÉ ki·ªÉm tra
    console.log("üîë Token nh·∫≠n ƒë∆∞·ª£c:", data.token);

    // X√≥a d·ªØ li·ªáu c≈© trong localStorage
    localStorage.removeItem("userInfo");

    // L∆∞u user v√† token v√†o Redux
    dispatch({ type: "USER_LOGIN_SUCCESS", payload: data });

    // L∆∞u v√†o localStorage
    localStorage.setItem("userInfo", JSON.stringify({
      ...data.user,
      token: data.token
    }));

    // Ki·ªÉm tra l·∫°i sau khi l∆∞u
    const savedUserInfo = localStorage.getItem("userInfo");
    if (!savedUserInfo) {
      console.error("‚ùå Kh√¥ng l∆∞u ƒë∆∞·ª£c userInfo v√†o localStorage");
      throw new Error("Kh√¥ng th·ªÉ l∆∞u d·ªØ li·ªáu ƒëƒÉng nh·∫≠p! Vui l√≤ng th·ª≠ l·∫°i.");
    } else {
      //console.log("‚úÖ userInfo ƒë√£ ƒë∆∞·ª£c l∆∞u:", JSON.parse(savedUserInfo));
    }

  } catch (error) {
    // Log l·ªói v√† dispatch
    console.error("‚ùå ƒêƒÉng nh·∫≠p th·∫•t b·∫°i:", error.response?.data || error.message);
    dispatch({
      type: 'USER_LOGIN_FAIL',
      payload: error.response?.data?.message || "ƒêƒÉng nh·∫≠p th·∫•t b·∫°i",
    });
  }
};


export const SignupUser = (user) => async (dispatch) => {
  try {
    dispatch({ type: 'USER_SIGNUP_REQUEST' });
    const { data } = await axios.post(`${BASE_URL}/user/register`, user);

    dispatch({ type: 'USER_SIGNUP_SUCCESS', payload: data });
    localStorage.setItem("userInfo", JSON.stringify(data));
  } catch (error) {
    dispatch({
      type: 'USER_SIGNUP_FAIL',
      payload: error.response?.data?.message || "ƒêƒÉng k√Ω th·∫•t b·∫°i",
    });
  }
};

export const SignoutUser = () => (dispatch) => {
  localStorage.removeItem("userInfo");
  dispatch({ type: "USER_SIGNOUT_SUCCESS" });
};

export const getAllUser = () => async (dispatch) => {
  try {
      dispatch({ type: "GET_ALL_USER_REQUEST" });

      const res = await axios.get("http://127.0.0.1:8000/api/admin/users");

      console.log("üü¢ API Response:", res.data); // Ki·ªÉm tra API tr·∫£ v·ªÅ g√¨

      dispatch({ type: "GET_ALL_USER_SUCCESS", payload: res.data });

  } catch (error) {
      console.error("‚ùå L·ªói khi l·∫•y danh s√°ch users:", error);
      dispatch({ type: "GET_ALL_USER_FAIL", payload: error.response?.data?.message || error.message });
  }
};
export const deleteUser = (id) => async (dispatch) => {
  if (!id) {
    console.error("‚ùå L·ªói: ID ng∆∞·ªùi d√πng kh√¥ng h·ª£p l·ªá");
    return;
  }

  try {
    console.log("üìå G·ª≠i y√™u c·∫ßu x√≥a user v·ªõi ID:", id);

    await axios.delete(`http://127.0.0.1:8000/api/admin/users/delete/${id}`);

    dispatch({ type: "DELETE_USER_SUCCESS", payload: id });
    console.log("‚úÖ X√≥a user th√†nh c√¥ng:", id);
  } catch (error) {
    console.error("‚ùå L·ªói khi x√≥a user:", error);
    dispatch({ type: "DELETE_USER_FAIL", payload: error.message });
  }
};

