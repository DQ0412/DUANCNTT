<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\SelectList;
use Illuminate\Support\Facades\Validator;

class SelectListController extends Controller
{
    // ğŸŸ¢ Láº¥y táº¥t cáº£ danh sÃ¡ch SelectList
    public function index()
    {
        try {
            $selectLists = SelectList::all();
            return response()->json($selectLists, 200);
        } catch (\Exception $e) {
            return response()->json(['message' => 'Lá»—i khi láº¥y danh sÃ¡ch', 'error' => $e->getMessage()], 500);
        }
    }

    // ğŸŸ¢ Láº¥y thÃ´ng tin SelectList theo ID
    public function show($id)
    {
        try {
            $selectList = SelectList::find($id);
            if (!$selectList) {
                return response()->json(['message' => 'KhÃ´ng tÃ¬m tháº¥y danh sÃ¡ch'], 404);
            }
            return response()->json($selectList, 200);
        } catch (\Exception $e) {
            return response()->json(['message' => 'Lá»—i khi láº¥y thÃ´ng tin', 'error' => $e->getMessage()], 500);
        }
    }

    // ğŸŸ¢ Táº¡o má»›i SelectList
    public function store(Request $request)
    {
        $validator = Validator::make($request->all(), [
            'name' => 'required|string|max:255',
            'options' => 'required|array'
        ]);

        if ($validator->fails()) {
            return response()->json(['message' => 'Dá»¯ liá»‡u khÃ´ng há»£p lá»‡', 'errors' => $validator->errors()], 400);
        }

        try {
            $selectList = SelectList::create([
                'name' => $request->name,
                'options' => json_encode($request->options),
            ]);

            return response()->json(['message' => 'Táº¡o danh sÃ¡ch thÃ nh cÃ´ng', 'data' => $selectList], 201);
        } catch (\Exception $e) {
            return response()->json(['message' => 'Lá»—i khi táº¡o danh sÃ¡ch', 'error' => $e->getMessage()], 500);
        }
    }

    // ğŸŸ¢ Cáº­p nháº­t SelectList
    public function update(Request $request, $id)
    {
        try {
            $selectList = SelectList::find($id);
            if (!$selectList) {
                return response()->json(['message' => 'KhÃ´ng tÃ¬m tháº¥y danh sÃ¡ch'], 404);
            }

            $selectList->update([
                'name' => $request->name ?? $selectList->name,
                'options' => isset($request->options) ? json_encode($request->options) : $selectList->options,
            ]);

            return response()->json(['message' => 'Cáº­p nháº­t thÃ nh cÃ´ng', 'data' => $selectList], 200);
        } catch (\Exception $e) {
            return response()->json(['message' => 'Lá»—i khi cáº­p nháº­t', 'error' => $e->getMessage()], 500);
        }
    }

    // ğŸŸ¢ XÃ³a SelectList
    public function destroy($id)
    {
        try {
            $selectList = SelectList::find($id);
            if (!$selectList) {
                return response()->json(['message' => 'KhÃ´ng tÃ¬m tháº¥y danh sÃ¡ch'], 404);
            }

            $selectList->delete();
            return response()->json(['message' => 'XÃ³a danh sÃ¡ch thÃ nh cÃ´ng'], 200);
        } catch (\Exception $e) {
            return response()->json(['message' => 'Lá»—i khi xÃ³a', 'error' => $e->getMessage()], 500);
        }
    }
}
